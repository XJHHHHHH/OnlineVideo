<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Welcome to use the TableGo Tools.
    
    http://vipbooks.iteye.com
    http://blog.csdn.net/vipbooks
    http://www.cnblogs.com/vipbooks
    
    Author:bianj
    Email:edinsker@163.com
    Version:5.8.0
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- USER -->
<mapper namespace="com.duxing.onlinevideo.dao.UserDao">
    <!-- 结果映射 -->
    <resultMap id="userMap" type="User">
        <id column="ID" property="id" jdbcType="INTEGER" />
        <result column="MOBILE" property="mobile" jdbcType="VARCHAR" />
        <result column="USERNAME" property="username" jdbcType="VARCHAR" />
        <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
        <result column="EMAIL" property="email" jdbcType="VARCHAR" />
        <result column="VIP_FLAG" property="vipFlag" jdbcType="VARCHAR" />
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
        <result column="FLAG" property="flag" jdbcType="INTEGER"/>
    </resultMap>
    
    <!-- 表所有字段 -->
    <sql id="allColumns">
        ID, MOBILE, USERNAME, PASSWORD, EMAIL, VIP_FLAG, CREATE_TIME ,FLAG
    </sql>
    
    <!-- 查询所有数据 -->
    <select id="findUserAll" resultMap="userMap">
        SELECT
        <include refid="allColumns" />
        FROM USER
        WHERE FLAG = 1
    </select>
    
    <!-- 根据条件查询数据 -->
    <select id="findUserByCondition" resultMap="userMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM USER WHERE 1 = 1
        <if test="mobile != null and mobile != ''">
            AND MOBILE = #{mobile}
        </if>
        <if test="username != null and username != ''">
            AND USERNAME = #{username}
        </if>
        <if test="password != null and password != ''">
            AND PASSWORD = #{password}
        </if>
        <if test="email != null and email != ''">
            AND EMAIL = #{email}
        </if>
        <if test="vipFlag != null">
            AND VIP_FLAG = #{vipFlag}
        </if>
        <if test="createTime != null">
            AND CREATE_TIME = #{createTime}
        </if>
        AND  flag = 1
    </select>

    <!-- 根据主键查询数据 -->
    <select id="findUserByIds" resultMap="userMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM USER WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertUser" parameterType="map">
        INSERT INTO USER (<include refid="allColumns" />)
        VALUES (
            #{id},
            #{mobile},
            #{username},
            #{password},
            #{email},
            #{vipFlag},
            #{createTime},
            #{flag}
        )
    </insert>
    
    <!-- 修改数据 -->
    <update id="updateUser" parameterType="user">
        UPDATE user
        <set>
            <if test="mobile != null">
                mobile = #{mobile},
            </if>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="vipFlag != null">
                vip_flag = #{vipFlag},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="flag != null">
                flag = #{flag}
            </if>
        </set>
        WHERE id = #{id}
    </update>
    
    <!-- 批量修改数据 -->
    <update id="updateUsers" parameterType="list">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE USER SET
                MOBILE = #{item.mobile},
                USERNAME = #{item.username},
                PASSWORD = #{item.password},
                EMAIL = #{item.email},
                VIP_FLAG = #{item.vipFlag},
                CREATE_TIME = #{item.createTime}
            WHERE ID = #{item.id}
        </foreach>
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deleteUserById" parameterType="string">
        DELETE FROM USER WHERE ID = #{id}
    </delete>
    
    <!-- 根据主键批量删除数据 -->
    <delete id="deleteUserByIds" parameterType="list">
        DELETE FROM USER WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>



</mapper>